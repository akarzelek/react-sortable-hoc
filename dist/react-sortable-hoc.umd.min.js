!(function(e, t) {
  'object' == typeof exports && 'undefined' != typeof module
    ? t(exports, require('react'), require('prop-types'), require('react-dom'))
    : 'function' == typeof define && define.amd
    ? define(['exports', 'react', 'prop-types', 'react-dom'], t)
    : t(((e = e || self).SortableHOC = {}), e.React, e.PropTypes, e.ReactDOM);
})(this, function(e, r, i, a) {
  'use strict';
  function t(e, t) {
    return e((t = {exports: {}}), t.exports), t.exports;
  }
  i = i && i.hasOwnProperty('default') ? i.default : i;
  var s = t(function(e) {
    function t() {
      return (
        (e.exports = t =
          Object.assign ||
          function(e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = arguments[t];
              for (var o in n)
                Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);
            }
            return e;
          }),
        t.apply(this, arguments)
      );
    }
    e.exports = t;
  });
  var n = function(e) {
    if (Array.isArray(e)) return e;
  };
  var o = function(e, t) {
    var n = [],
      o = !0,
      r = !1,
      i = void 0;
    try {
      for (
        var a, s = e[Symbol.iterator]();
        !(o = (a = s.next()).done) && (n.push(a.value), !t || n.length !== t);
        o = !0
      );
    } catch (e) {
      (r = !0), (i = e);
    } finally {
      try {
        o || null == s.return || s.return();
      } finally {
        if (r) throw i;
      }
    }
    return n;
  };
  var l = function() {
    throw new TypeError('Invalid attempt to destructure non-iterable instance');
  };
  var b = function(e, t) {
    return n(e) || o(e, t) || l();
  };
  var c = function(e, t, n) {
    return (
      t in e
        ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0,
          })
        : (e[t] = n),
      e
    );
  };
  var R = function(t) {
    for (var e = 1; e < arguments.length; e++) {
      var n = null != arguments[e] ? arguments[e] : {},
        o = Object.keys(n);
      'function' == typeof Object.getOwnPropertySymbols &&
        (o = o.concat(
          Object.getOwnPropertySymbols(n).filter(function(e) {
            return Object.getOwnPropertyDescriptor(n, e).enumerable;
          }),
        )),
        o.forEach(function(e) {
          c(t, e, n[e]);
        });
    }
    return t;
  };
  var u = function(e, t) {
    if (!(e instanceof t))
      throw new TypeError('Cannot call a class as a function');
  };
  function d(e, t) {
    for (var n = 0; n < t.length; n++) {
      var o = t[n];
      (o.enumerable = o.enumerable || !1),
        (o.configurable = !0),
        'value' in o && (o.writable = !0),
        Object.defineProperty(e, o.key, o);
    }
  }
  var f = function(e, t, n) {
      return t && d(e.prototype, t), n && d(e, n), e;
    },
    h = t(function(t) {
      function n(e) {
        return (n =
          'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
            ? function(e) {
                return typeof e;
              }
            : function(e) {
                return e &&
                  'function' == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? 'symbol'
                  : typeof e;
              })(e);
      }
      function o(e) {
        return (
          'function' == typeof Symbol && 'symbol' === n(Symbol.iterator)
            ? (t.exports = o = function(e) {
                return n(e);
              })
            : (t.exports = o = function(e) {
                return e &&
                  'function' == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? 'symbol'
                  : n(e);
              }),
          o(e)
        );
      }
      t.exports = o;
    });
  var p = function(e) {
    if (void 0 === e)
      throw new ReferenceError(
        "this hasn't been initialised - super() hasn't been called",
      );
    return e;
  };
  var g = function(e, t) {
      return !t || ('object' !== h(t) && 'function' != typeof t) ? p(e) : t;
    },
    y = t(function(t) {
      function n(e) {
        return (
          (t.exports = n = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              }),
          n(e)
        );
      }
      t.exports = n;
    }),
    v = t(function(n) {
      function o(e, t) {
        return (
          (n.exports = o =
            Object.setPrototypeOf ||
            function(e, t) {
              return (e.__proto__ = t), e;
            }),
          o(e, t)
        );
      }
      n.exports = o;
    });
  var m = function(e, t) {
      if ('function' != typeof t && null !== t)
        throw new TypeError(
          'Super expression must either be null or a function',
        );
      (e.prototype = Object.create(t && t.prototype, {
        constructor: {value: e, writable: !0, configurable: !0},
      })),
        t && v(e, t);
    },
    w = function(e, t, n, o, r, i, a, s) {
      if (!e) {
        var l;
        if (void 0 === t)
          l = new Error(
            'Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.',
          );
        else {
          var c = [n, o, r, i, a, s],
            u = 0;
          (l = new Error(
            t.replace(/%s/g, function() {
              return c[u++];
            }),
          )).name = 'Invariant Violation';
        }
        throw ((l.framesToPop = 1), l);
      }
    },
    x = (function() {
      function e() {
        u(this, e), c(this, 'refs', {});
      }
      return (
        f(e, [
          {
            key: 'add',
            value: function(e, t) {
              this.refs[e] || (this.refs[e] = []), this.refs[e].push(t);
            },
          },
          {
            key: 'remove',
            value: function(e, t) {
              var n = this.getIndex(e, t);
              -1 !== n && this.refs[e].splice(n, 1);
            },
          },
          {
            key: 'isActive',
            value: function() {
              return this.active;
            },
          },
          {
            key: 'getActive',
            value: function() {
              var t = this;
              return this.refs[this.active.collection].find(function(e) {
                return e.node.sortableInfo.index == t.active.index;
              });
            },
          },
          {
            key: 'getIndex',
            value: function(e, t) {
              return this.refs[e].indexOf(t);
            },
          },
          {
            key: 'getOrderedRefs',
            value: function() {
              var e =
                0 < arguments.length && void 0 !== arguments[0]
                  ? arguments[0]
                  : this.active.collection;
              return this.refs[e].sort(S);
            },
          },
        ]),
        e
      );
    })();
  function S(e, t) {
    return e.node.sortableInfo.index - t.node.sortableInfo.index;
  }
  var O = function(e) {
    if (Array.isArray(e)) {
      for (var t = 0, n = new Array(e.length); t < e.length; t++) n[t] = e[t];
      return n;
    }
  };
  var T = function(e) {
    if (
      Symbol.iterator in Object(e) ||
      '[object Arguments]' === Object.prototype.toString.call(e)
    )
      return Array.from(e);
  };
  var C = function() {
    throw new TypeError('Invalid attempt to spread non-iterable instance');
  };
  var M = function(e) {
    return O(e) || T(e) || C();
  };
  function k(n, o) {
    return Object.keys(n).reduce(function(e, t) {
      return -1 === o.indexOf(t) && (e[t] = n[t]), e;
    }, {});
  }
  var D = {
      end: ['touchend', 'touchcancel', 'mouseup'],
      move: ['touchmove', 'mousemove'],
      start: ['touchstart', 'mousedown'],
    },
    I = (function() {
      if ('undefined' == typeof window || 'undefined' == typeof document)
        return '';
      var e = window.getComputedStyle(document.documentElement, '') || [
          '-moz-hidden-iframe',
        ],
        t = (Array.prototype.slice
          .call(e)
          .join('')
          .match(/-(moz|webkit|ms)-/) ||
          ('' === e.OLink && ['', 'o']))[1];
      switch (t) {
        case 'ms':
          return 'ms';
        default:
          return t && t.length ? t[0].toUpperCase() + t.substr(1) : '';
      }
    })();
  function N(t, n) {
    Object.keys(n).forEach(function(e) {
      t.style[e] = n[e];
    });
  }
  function W(e) {
    return c(
      {},
      ''.concat(I, 'Transform'),
      null == e ? '' : 'translate3d('.concat(e.x, 'px,').concat(e.y, 'px,0)'),
    );
  }
  function L(e) {
    return c(
      {},
      ''.concat(I, 'TransitionDuration'),
      null == e ? '' : ''.concat(e, 'ms'),
    );
  }
  function E(e, t) {
    for (; e; ) {
      if (t(e)) return e;
      e = e.parentNode;
    }
    return null;
  }
  function A(e, t, n) {
    return Math.max(e, Math.min(n, t));
  }
  function P(e) {
    return 'px' === e.substr(-2) ? parseFloat(e) : 0;
  }
  function j(e, t) {
    var n = t.displayName || t.name;
    return n ? ''.concat(e, '(').concat(n, ')') : e;
  }
  function H(e, t) {
    var n = e.getBoundingClientRect();
    return {top: n.top + t.top, left: n.left + t.left};
  }
  function K(e) {
    return e.touches && e.touches.length
      ? {x: e.touches[0].pageX, y: e.touches[0].pageY}
      : e.changedTouches && e.changedTouches.length
      ? {x: e.changedTouches[0].pageX, y: e.changedTouches[0].pageY}
      : {x: e.pageX, y: e.pageY};
  }
  function F(e, t) {
    var n =
      2 < arguments.length && void 0 !== arguments[2]
        ? arguments[2]
        : {left: 0, top: 0};
    if (e) {
      var o = {left: n.left + e.offsetLeft, top: n.top + e.offsetTop};
      return e.parentNode === t ? o : F(e.parentNode, t, o);
    }
  }
  function _(e) {
    var t = e.lockOffset,
      n = e.width,
      o = e.height,
      r = t,
      i = t,
      a = 'px';
    if ('string' == typeof t) {
      var s = /^[+-]?\d*(?:\.\d*)?(px|%)$/.exec(t);
      w(
        null !== s,
        'lockOffset value should be a number or a string of a number followed by "px" or "%". Given %s',
        t,
      ),
        (r = parseFloat(t)),
        (i = parseFloat(t)),
        (a = s[1]);
    }
    return (
      w(
        isFinite(r) && isFinite(i),
        'lockOffset value should be a finite. Given %s',
        t,
      ),
      '%' === a && ((r = (r * n) / 100), (i = (i * o) / 100)),
      {x: r, y: i}
    );
  }
  function G(e) {
    return e instanceof HTMLElement
      ? ((t = e),
        (n = window.getComputedStyle(t)),
        (o = /(auto|scroll)/),
        ['overflow', 'overflowX', 'overflowY'].find(function(e) {
          return o.test(n[e]);
        })
          ? e
          : G(e.parentNode))
      : null;
    var t, n, o;
  }
  var B = 27,
    q = 32,
    X = 37,
    U = 38,
    Y = 39,
    V = 40,
    z = {
      Anchor: 'A',
      Button: 'BUTTON',
      Canvas: 'CANVAS',
      Input: 'INPUT',
      Option: 'OPTION',
      Textarea: 'TEXTAREA',
      Select: 'SELECT',
    };
  function $(n) {
    var e,
      t,
      o =
        1 < arguments.length && void 0 !== arguments[1]
          ? arguments[1]
          : {withRef: !1};
    return (
      (t = e = (function(e) {
        function t() {
          return u(this, t), g(this, y(t).apply(this, arguments));
        }
        return (
          m(t, e),
          f(t, [
            {
              key: 'componentDidMount',
              value: function() {
                a.findDOMNode(this).sortableHandle = !0;
              },
            },
            {
              key: 'getWrappedInstance',
              value: function() {
                return (
                  w(
                    o.withRef,
                    'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableHandle() call',
                  ),
                  this.refs.wrappedInstance
                );
              },
            },
            {
              key: 'render',
              value: function() {
                var e = o.withRef ? 'wrappedInstance' : null;
                return r.createElement(n, s({ref: e}, this.props));
              },
            },
          ]),
          t
        );
      })(r.Component)),
      c(e, 'displayName', j('sortableHandle', n)),
      t
    );
  }
  function J(e) {
    return null != e.sortableHandle;
  }
  var Q = (function() {
    function n(e, t) {
      u(this, n), (this.container = e), (this.onScrollCallback = t);
    }
    return (
      f(n, [
        {
          key: 'clear',
          value: function() {
            null != this.interval &&
              (clearInterval(this.interval), (this.interval = null));
          },
        },
        {
          key: 'update',
          value: function(e) {
            var t = this,
              n = e.translate,
              o = e.minTranslate,
              r = e.maxTranslate,
              i = e.width,
              a = e.height,
              s = {x: 0, y: 0},
              l = {x: 1, y: 1},
              c = 10,
              u = 10,
              d = this.container,
              f = d.scrollTop,
              h = d.scrollLeft,
              p = d.scrollHeight,
              g = d.scrollWidth,
              y = 0 === f,
              v = p - f - d.clientHeight == 0,
              m = 0 === h,
              x = g - h - d.clientWidth == 0;
            n.y >= r.y - a / 2 && !v
              ? ((s.y = 1), (l.y = u * Math.abs((r.y - a / 2 - n.y) / a)))
              : n.x >= r.x - i / 2 && !x
              ? ((s.x = 1), (l.x = c * Math.abs((r.x - i / 2 - n.x) / i)))
              : n.y <= o.y + a / 2 && !y
              ? ((s.y = -1), (l.y = u * Math.abs((n.y - a / 2 - o.y) / a)))
              : n.x <= o.x + i / 2 &&
                !m &&
                ((s.x = -1), (l.x = c * Math.abs((n.x - i / 2 - o.x) / i))),
              this.interval && (this.clear(), (this.isAutoScrolling = !1)),
              (0 === s.x && 0 === s.y) ||
                (this.interval = setInterval(function() {
                  t.isAutoScrolling = !0;
                  var e = {left: l.x * s.x, top: l.y * s.y};
                  (t.container.scrollTop += e.top),
                    (t.container.scrollLeft += e.left),
                    t.onScrollCallback(e);
                }, 5));
          },
        },
      ]),
      n
    );
  })();
  var Z = {
      axis: i.oneOf(['x', 'y', 'xy']),
      contentWindow: i.any,
      disableAutoscroll: i.bool,
      distance: i.number,
      getContainer: i.func,
      getHelperDimensions: i.func,
      helperClass: i.string,
      helperContainer: i.oneOfType([
        i.func,
        'undefined' == typeof HTMLElement ? i.any : i.instanceOf(HTMLElement),
      ]),
      hideSortableGhost: i.bool,
      keyboardSortingTransitionDuration: i.number,
      lockAxis: i.string,
      lockOffset: i.oneOfType([
        i.number,
        i.string,
        i.arrayOf(i.oneOfType([i.number, i.string])),
      ]),
      lockToContainerEdges: i.bool,
      onSortEnd: i.func,
      onSortMove: i.func,
      onSortOver: i.func,
      onSortStart: i.func,
      pressDelay: i.number,
      pressThreshold: i.number,
      keyCodes: i.shape({
        lift: i.arrayOf(i.number),
        drop: i.arrayOf(i.number),
        cancel: i.arrayOf(i.number),
        up: i.arrayOf(i.number),
        down: i.arrayOf(i.number),
      }),
      shouldCancelStart: i.func,
      transitionDuration: i.number,
      updateBeforeSortStart: i.func,
      useDragHandle: i.bool,
      useWindowAsScrollContainer: i.bool,
    },
    ee = {lift: [q], drop: [q], cancel: [B], up: [U, X], down: [V, Y]},
    te = {
      axis: 'y',
      disableAutoscroll: !1,
      distance: 0,
      getHelperDimensions: function(e) {
        var t = e.node;
        return {height: t.offsetHeight, width: t.offsetWidth};
      },
      hideSortableGhost: !0,
      lockOffset: '50%',
      lockToContainerEdges: !1,
      pressDelay: 0,
      pressThreshold: 5,
      keyCodes: ee,
      shouldCancelStart: function(e) {
        return (
          -1 !==
            [z.Input, z.Textarea, z.Select, z.Option, z.Button].indexOf(
              e.target.tagName,
            ) ||
          !!E(e.target, function(e) {
            return 'true' === e.contentEditable;
          })
        );
      },
      transitionDuration: 300,
      useWindowAsScrollContainer: !1,
    },
    ne = Object.keys(Z);
  function oe(t) {
    var e,
      n,
      o =
        1 < arguments.length && void 0 !== arguments[1]
          ? arguments[1]
          : {withRef: !1};
    return (
      (n = e = (function(e) {
        function n(e) {
          var A, t;
          return (
            u(this, n),
            (A = g(this, y(n).call(this, e))),
            c(p(p(A)), 'state', {}),
            c(p(p(A)), 'handleStart', function(e) {
              var t = A.props,
                n = t.distance,
                o = t.shouldCancelStart;
              if (2 !== e.button && !o(e)) {
                (A.touched = !0), (A.position = K(e));
                var r,
                  i = E(e.target, function(e) {
                    return null != e.sortableInfo;
                  });
                if (
                  i &&
                  i.sortableInfo &&
                  A.nodeIsChild(i) &&
                  !A.state.sorting
                ) {
                  var a = A.props.useDragHandle,
                    s = i.sortableInfo,
                    l = s.index,
                    c = s.collection;
                  if (s.disabled) return;
                  if (a && !E(e.target, J)) return;
                  (A.manager.active = {collection: c, index: l}),
                    ((r = e).touches && r.touches.length) ||
                      (r.changedTouches && r.changedTouches.length) ||
                      e.target.tagName !== z.Anchor ||
                      e.preventDefault(),
                    n ||
                      (0 === A.props.pressDelay
                        ? A.handlePress(e)
                        : (A.pressTimer = setTimeout(function() {
                            return A.handlePress(e);
                          }, A.props.pressDelay)));
                }
              }
            }),
            c(p(p(A)), 'nodeIsChild', function(e) {
              return e.sortableInfo.manager === A.manager;
            }),
            c(p(p(A)), 'handleMove', function(e) {
              var t = A.props,
                n = t.distance,
                o = t.pressThreshold;
              if (
                !A.state.sorting &&
                A.touched &&
                !A._awaitingUpdateBeforeSortStart
              ) {
                var r = K(e),
                  i = {x: A.position.x - r.x, y: A.position.y - r.y},
                  a = Math.abs(i.x) + Math.abs(i.y);
                (A.delta = i),
                  n || (o && !(o <= a))
                    ? n && n <= a && A.manager.isActive() && A.handlePress(e)
                    : (clearTimeout(A.cancelTimer),
                      (A.cancelTimer = setTimeout(A.cancel, 0)));
              }
            }),
            c(p(p(A)), 'handleEnd', function() {
              (A.touched = !1), A.cancel();
            }),
            c(p(p(A)), 'cancel', function() {
              var e = A.props.distance;
              A.state.sorting ||
                (e || clearTimeout(A.pressTimer), (A.manager.active = null));
            }),
            c(p(p(A)), 'handlePress', function(E) {
              try {
                var r = A.manager.getActive(),
                  e = (function() {
                    if (r) {
                      var e = function() {
                          var e,
                            t,
                            n,
                            o,
                            r,
                            i,
                            a,
                            s,
                            l = C.sortableInfo.index,
                            c =
                              ((e = C),
                              {
                                bottom: P(
                                  (t = window.getComputedStyle(e)).marginBottom,
                                ),
                                left: P(t.marginLeft),
                                right: P(t.marginRight),
                                top: P(t.marginTop),
                              }),
                            u =
                              ((n = A.container),
                              'grid' ===
                              (o = window.getComputedStyle(n)).display
                                ? {x: P(o.gridColumnGap), y: P(o.gridRowGap)}
                                : {x: 0, y: 0}),
                            d = A.scrollContainer.getBoundingClientRect(),
                            f = b({index: l, node: C, collection: k});
                          if (
                            ((A.node = C),
                            (A.margin = c),
                            (A.gridGap = u),
                            (A.width = f.width),
                            (A.height = f.height),
                            (A.marginOffset = {
                              x: A.margin.left + A.margin.right + A.gridGap.x,
                              y: Math.max(
                                A.margin.top,
                                A.margin.bottom,
                                A.gridGap.y,
                              ),
                            }),
                            (A.boundingClientRect = C.getBoundingClientRect()),
                            (A.containerBoundingRect = d),
                            (A.index = l),
                            (A.newIndex = l),
                            (A.axis = {
                              x: 0 <= x.indexOf('x'),
                              y: 0 <= x.indexOf('y'),
                            }),
                            (A.offsetEdge = F(C, A.container)),
                            (A.initialOffset = K(
                              I
                                ? R({}, E, {
                                    pageX: A.boundingClientRect.left,
                                    pageY: A.boundingClientRect.top,
                                  })
                                : E,
                            )),
                            (A.initialScroll = {
                              left: A.scrollContainer.scrollLeft,
                              top: A.scrollContainer.scrollTop,
                            }),
                            (A.initialWindowScroll = {
                              left: window.pageXOffset,
                              top: window.pageYOffset,
                            }),
                            (A.helper = A.helperContainer.appendChild(
                              ((i =
                                'input, textarea, select, canvas, [contenteditable]'),
                              (a = (r = C).querySelectorAll(i)),
                              (s = r.cloneNode(!0)),
                              M(s.querySelectorAll(i)).forEach(function(e, t) {
                                'file' !== e.type && (e.value = a[t].value),
                                  'radio' === e.type &&
                                    e.name &&
                                    (e.name = '__sortableClone__'.concat(
                                      e.name,
                                    )),
                                  e.tagName === z.Canvas &&
                                    0 < a[t].width &&
                                    0 < a[t].height &&
                                    e.getContext('2d').drawImage(a[t], 0, 0);
                              }),
                              s),
                            )),
                            N(A.helper, {
                              boxSizing: 'border-box',
                              height: ''.concat(A.height, 'px'),
                              left: ''.concat(
                                A.boundingClientRect.left - c.left,
                                'px',
                              ),
                              pointerEvents: 'none',
                              position: 'fixed',
                              top: ''.concat(
                                A.boundingClientRect.top - c.top,
                                'px',
                              ),
                              width: ''.concat(A.width, 'px'),
                            }),
                            I && A.helper.focus(),
                            S &&
                              N((A.sortableGhost = C), {
                                opacity: 0,
                                visibility: 'hidden',
                              }),
                            (A.minTranslate = {}),
                            (A.maxTranslate = {}),
                            I)
                          ) {
                            var h = T
                                ? {
                                    top: 0,
                                    left: 0,
                                    width: A.contentWindow.innerWidth,
                                    height: A.contentWindow.innerHeight,
                                  }
                                : A.containerBoundingRect,
                              p = h.top,
                              g = h.left,
                              y = h.width,
                              v = p + h.height,
                              m = g + y;
                            A.axis.x &&
                              ((A.minTranslate.x =
                                g - A.boundingClientRect.left),
                              (A.maxTranslate.x =
                                m - (A.boundingClientRect.left + A.width))),
                              A.axis.y &&
                                ((A.minTranslate.y =
                                  p - A.boundingClientRect.top),
                                (A.maxTranslate.y =
                                  v - (A.boundingClientRect.top + A.height)));
                          } else
                            A.axis.x &&
                              ((A.minTranslate.x =
                                (T ? 0 : d.left) -
                                A.boundingClientRect.left -
                                A.width / 2),
                              (A.maxTranslate.x =
                                (T
                                  ? A.contentWindow.innerWidth
                                  : d.left + d.width) -
                                A.boundingClientRect.left -
                                A.width / 2)),
                              A.axis.y &&
                                ((A.minTranslate.y =
                                  (T ? 0 : d.top) -
                                  A.boundingClientRect.top -
                                  A.height / 2),
                                (A.maxTranslate.y =
                                  (T
                                    ? A.contentWindow.innerHeight
                                    : d.top + d.height) -
                                  A.boundingClientRect.top -
                                  A.height / 2));
                          w &&
                            w.split(' ').forEach(function(e) {
                              return A.helper.classList.add(e);
                            }),
                            (A.listenerNode = E.touches ? C : A.contentWindow),
                            I
                              ? (A.listenerNode.addEventListener(
                                  'wheel',
                                  A.handleKeyEnd,
                                  !0,
                                ),
                                A.listenerNode.addEventListener(
                                  'mousedown',
                                  A.handleKeyEnd,
                                  !0,
                                ),
                                A.listenerNode.addEventListener(
                                  'keydown',
                                  A.handleKeyDown,
                                ))
                              : (D.move.forEach(function(e) {
                                  return A.listenerNode.addEventListener(
                                    e,
                                    A.handleSortMove,
                                    !1,
                                  );
                                }),
                                D.end.forEach(function(e) {
                                  return A.listenerNode.addEventListener(
                                    e,
                                    A.handleSortEnd,
                                    !1,
                                  );
                                })),
                            A.setState({sorting: !0, sortingIndex: l}),
                            O &&
                              O(
                                {
                                  node: C,
                                  index: l,
                                  collection: k,
                                  isKeySorting: I,
                                  nodes: A.manager.getOrderedRefs(),
                                  helper: A.helper,
                                },
                                E,
                              ),
                            I && A.keyMove(0);
                        },
                        t = A.props,
                        x = t.axis,
                        b = t.getHelperDimensions,
                        w = t.helperClass,
                        S = t.hideSortableGhost,
                        n = t.updateBeforeSortStart,
                        O = t.onSortStart,
                        T = t.useWindowAsScrollContainer,
                        C = r.node,
                        k = r.collection,
                        I = A.manager.isKeySorting,
                        o = (function() {
                          if ('function' == typeof n) {
                            A._awaitingUpdateBeforeSortStart = !0;
                            var e = (function(e, t) {
                              try {
                                var n = e();
                              } catch (e) {
                                return t(!0, e);
                              }
                              return n && n.then
                                ? n.then(t.bind(null, !1), t.bind(null, !0))
                                : t(!1, value);
                            })(
                              function() {
                                var e = C.sortableInfo.index;
                                return Promise.resolve(
                                  n(
                                    {
                                      collection: k,
                                      index: e,
                                      node: C,
                                      isKeySorting: I,
                                    },
                                    E,
                                  ),
                                ).then(function() {});
                              },
                              function(e, t) {
                                if (
                                  ((A._awaitingUpdateBeforeSortStart = !1), e)
                                )
                                  throw t;
                                return t;
                              },
                            );
                            if (e && e.then) return e.then(function() {});
                          }
                        })();
                      return o && o.then ? o.then(e) : e();
                    }
                  })();
                return Promise.resolve(
                  e && e.then ? e.then(function() {}) : void 0,
                );
              } catch (e) {
                return Promise.reject(e);
              }
            }),
            c(p(p(A)), '_handleSortMove', function(e) {
              A.animateNodes(),
                A.autoscroll(),
                window.requestAnimationFrame
                  ? (A.sortMoveAF = null)
                  : setTimeout(function() {
                      A.sortMoveAF = null;
                    }, 1e3 / 60);
            }),
            c(p(p(A)), 'handleSortMove', function(e) {
              var t = A.props.onSortMove;
              'function' == typeof e.preventDefault && e.preventDefault(),
                A.sortMoveAF ||
                  (A.updateHelperPosition(e),
                  window.requestAnimationFrame
                    ? (A.sortMoveAF = window.requestAnimationFrame(
                        A._handleSortMove,
                      ))
                    : ((A.sortMoveAF = !0), A._handleSortMove()),
                  t && t(e));
            }),
            c(p(p(A)), 'handleSortEnd', function(e) {
              var t = A.props,
                n = t.hideSortableGhost,
                o = t.onSortEnd;
              window.cancelAnimationFrame &&
                A.sortMoveAF &&
                (window.cancelAnimationFrame(A.sortMoveAF),
                (A.sortMoveAF = null));
              var r = A.manager,
                i = r.active.collection,
                a = r.isKeySorting,
                s = A.manager.getOrderedRefs();
              A.listenerNode &&
                (a
                  ? (A.listenerNode.removeEventListener(
                      'wheel',
                      A.handleKeyEnd,
                      !0,
                    ),
                    A.listenerNode.removeEventListener(
                      'mousedown',
                      A.handleKeyEnd,
                      !0,
                    ),
                    A.listenerNode.removeEventListener(
                      'keydown',
                      A.handleKeyDown,
                    ))
                  : (D.move.forEach(function(e) {
                      return A.listenerNode.removeEventListener(
                        e,
                        A.handleSortMove,
                      );
                    }),
                    D.end.forEach(function(e) {
                      return A.listenerNode.removeEventListener(
                        e,
                        A.handleSortEnd,
                      );
                    }))),
                A.helper.parentNode.removeChild(A.helper),
                n &&
                  A.sortableGhost &&
                  N(A.sortableGhost, {opacity: '', visibility: ''});
              for (var l = 0, c = s.length; l < c; l++) {
                var u = s[l],
                  d = u.node;
                (u.edgeOffset = null),
                  (u.boundingClientRect = null),
                  N(d, R({}, W(null), L(null))),
                  (u.translate = null);
              }
              A.autoScroller.clear(),
                (A.manager.active = null),
                (A.manager.isKeySorting = !1),
                A.setState({sorting: !1, sortingIndex: null}),
                'function' == typeof o &&
                  o(
                    {
                      collection: i,
                      newIndex: A.newIndex,
                      oldIndex: A.index,
                      isKeySorting: a,
                      nodes: s,
                    },
                    e,
                  ),
                (A.touched = !1);
            }),
            c(p(p(A)), 'autoscroll', function() {
              var e = A.props.disableAutoscroll,
                t = A.manager.isKeySorting;
              if (e) A.autoScroller.clear();
              else {
                if (t) {
                  var n = R({}, A.translate),
                    o = 0,
                    r = 0;
                  return (
                    A.axis.x &&
                      ((n.x = Math.min(
                        A.maxTranslate.x,
                        Math.max(A.minTranslate.x, A.translate.x),
                      )),
                      (o = A.translate.x - n.x)),
                    A.axis.y &&
                      ((n.y = Math.min(
                        A.maxTranslate.y,
                        Math.max(A.minTranslate.y, A.translate.y),
                      )),
                      (r = A.translate.y - n.y)),
                    (A.translate = n),
                    N(A.helper, W(A.translate)),
                    (A.scrollContainer.scrollLeft += o),
                    void (A.scrollContainer.scrollTop += r)
                  );
                }
                A.autoScroller.update({
                  height: A.height,
                  maxTranslate: A.maxTranslate,
                  minTranslate: A.minTranslate,
                  translate: A.translate,
                  width: A.width,
                });
              }
            }),
            c(p(p(A)), 'onAutoScroll', function(e) {
              (A.translate.x += e.left),
                (A.translate.y += e.top),
                A.animateNodes();
            }),
            c(p(p(A)), 'handleKeyDown', function(e) {
              var t = e.keyCode,
                n = A.props,
                o = n.shouldCancelStart,
                r = n.keyCodes,
                i = R({}, ee, void 0 === r ? {} : r);
              (A.manager.active && !A.manager.isKeySorting) ||
                !(
                  A.manager.active ||
                  (i.lift.includes(t) && !o(e) && A.isValidSortingTarget(e))
                ) ||
                (e.stopPropagation(),
                e.preventDefault(),
                i.lift.includes(t) && !A.manager.active
                  ? A.keyLift(e)
                  : i.drop.includes(t) && A.manager.active
                  ? A.keyDrop(e)
                  : i.cancel.includes(t)
                  ? ((A.newIndex = A.manager.active.index), A.keyDrop(e))
                  : i.up.includes(t)
                  ? A.keyMove(-1)
                  : i.down.includes(t) && A.keyMove(1));
            }),
            c(p(p(A)), 'keyLift', function(e) {
              var t = e.target,
                n = E(t, function(e) {
                  return null != e.sortableInfo;
                }).sortableInfo,
                o = n.index,
                r = n.collection;
              (A.initialFocusedNode = t),
                (A.manager.isKeySorting = !0),
                (A.manager.active = {index: o, collection: r}),
                A.handlePress(e);
            }),
            c(p(p(A)), 'keyMove', function(e) {
              var t = A.manager.getOrderedRefs(),
                n = t[t.length - 1].node.sortableInfo.index,
                o = A.newIndex + e,
                r = A.newIndex;
              if (!(o < 0 || n < o)) {
                (A.prevIndex = r), (A.newIndex = o);
                var i,
                  a,
                  s,
                  l =
                    ((i = A.newIndex),
                    (a = A.prevIndex),
                    (s = A.index),
                    i < s && a < i ? i - 1 : s < i && i < a ? i + 1 : i),
                  c = t.find(function(e) {
                    return e.node.sortableInfo.index === l;
                  }),
                  u = c.node,
                  d = A.containerScrollDelta,
                  f = c.boundingClientRect || H(u, d),
                  h = c.translate || {x: 0, y: 0},
                  p = f.top + h.y - d.top,
                  g = f.left + h.x - d.left,
                  y = r < o,
                  v = y && A.axis.x ? u.offsetWidth - A.width : 0,
                  m = y && A.axis.y ? u.offsetHeight - A.height : 0;
                A.handleSortMove({
                  pageX: g + v,
                  pageY: p + m,
                  ignoreTransition: 0 === e,
                });
              }
            }),
            c(p(p(A)), 'keyDrop', function(e) {
              A.handleSortEnd(e),
                A.initialFocusedNode && A.initialFocusedNode.focus();
            }),
            c(p(p(A)), 'handleKeyEnd', function(e) {
              A.manager.active && A.keyDrop(e);
            }),
            c(p(p(A)), 'isValidSortingTarget', function(e) {
              var t = A.props.useDragHandle,
                n = e.target,
                o = E(n, function(e) {
                  return null != e.sortableInfo;
                });
              return (
                o &&
                o.sortableInfo &&
                !o.sortableInfo.disabled &&
                (t ? J(n) : n.sortableInfo)
              );
            }),
            w(
              !((t = e).distance && t.pressDelay),
              'Attempted to set both `pressDelay` and `distance` on SortableContainer, you may only use one or the other, not both at the same time.',
            ),
            (A.manager = new x()),
            (A.events = {
              end: A.handleEnd,
              move: A.handleMove,
              start: A.handleStart,
            }),
            A
          );
        }
        return (
          m(n, e),
          f(n, [
            {
              key: 'getChildContext',
              value: function() {
                return {manager: this.manager};
              },
            },
            {
              key: 'componentDidMount',
              value: function() {
                var n = this,
                  o = this.props.useWindowAsScrollContainer,
                  e = this.getContainer();
                Promise.resolve(e).then(function(e) {
                  (n.container = e),
                    (n.document = n.container.ownerDocument || document);
                  var t =
                    n.props.contentWindow || n.document.defaultView || window;
                  (n.contentWindow = 'function' == typeof t ? t() : t),
                    (n.scrollContainer = o
                      ? n.document.scrollingElement ||
                        n.document.documentElement
                      : G(n.container) || n.container),
                    (n.autoScroller = new Q(n.scrollContainer, n.onAutoScroll)),
                    Object.keys(n.events).forEach(function(t) {
                      return D[t].forEach(function(e) {
                        return n.container.addEventListener(e, n.events[t], !1);
                      });
                    }),
                    n.container.addEventListener('keydown', n.handleKeyDown);
                });
              },
            },
            {
              key: 'componentWillUnmount',
              value: function() {
                var n = this;
                this.helper &&
                  this.helper.parentNode &&
                  this.helper.parentNode.removeChild(this.helper),
                  this.container &&
                    (Object.keys(this.events).forEach(function(t) {
                      return D[t].forEach(function(e) {
                        return n.container.removeEventListener(e, n.events[t]);
                      });
                    }),
                    this.container.removeEventListener(
                      'keydown',
                      this.handleKeyDown,
                    ));
              },
            },
            {
              key: 'updateHelperPosition',
              value: function(e) {
                var t = this.props,
                  n = t.lockAxis,
                  o = t.lockOffset,
                  r = t.lockToContainerEdges,
                  i = t.transitionDuration,
                  a = t.keyboardSortingTransitionDuration,
                  s = void 0 === a ? i : a,
                  l = this.manager.isKeySorting,
                  c = e.ignoreTransition,
                  u = K(e),
                  d = {
                    x: u.x - this.initialOffset.x,
                    y: u.y - this.initialOffset.y,
                  };
                if (
                  ((d.y -= window.pageYOffset - this.initialWindowScroll.top),
                  (d.x -= window.pageXOffset - this.initialWindowScroll.left),
                  (this.translate = d),
                  r)
                ) {
                  var f = (function(e) {
                      var t = e.height,
                        n = e.width,
                        o = e.lockOffset,
                        r = Array.isArray(o) ? o : [o, o];
                      w(
                        2 === r.length,
                        'lockOffset prop of SortableContainer should be a single value or an array of exactly two values. Given %s',
                        o,
                      );
                      var i = b(r, 2),
                        a = i[0],
                        s = i[1];
                      return [
                        _({height: t, lockOffset: a, width: n}),
                        _({height: t, lockOffset: s, width: n}),
                      ];
                    })({height: this.height, lockOffset: o, width: this.width}),
                    h = b(f, 2),
                    p = h[0],
                    g = h[1],
                    y = this.width / 2 - p.x,
                    v = this.height / 2 - p.y,
                    m = this.width / 2 - g.x,
                    x = this.height / 2 - g.y;
                  (d.x = A(
                    this.minTranslate.x + y,
                    this.maxTranslate.x - m,
                    d.x,
                  )),
                    (d.y = A(
                      this.minTranslate.y + v,
                      this.maxTranslate.y - x,
                      d.y,
                    ));
                }
                'x' === n ? (d.y = 0) : 'y' === n && (d.x = 0),
                  l && s && !c && N(this.helper, L(s)),
                  N(this.helper, W(d));
              },
            },
            {
              key: 'animateNodes',
              value: function() {
                var e = this.props,
                  t = e.hideSortableGhost,
                  n = e.onSortOver,
                  o = this.containerScrollDelta,
                  r = this.windowScrollDelta,
                  i = this.manager.getOrderedRefs(),
                  a = this.offsetEdge.left + this.translate.x + o.left,
                  s = this.offsetEdge.top + this.translate.y + o.top,
                  l = this.manager.isKeySorting,
                  c = this.newIndex;
                this.newIndex = null;
                for (var u = {}, d = 0, f = i.length; d < f; d++) {
                  var h = i[d].node,
                    p = h.sortableInfo.index,
                    g = h.offsetWidth,
                    y = h.offsetHeight,
                    v = this.height > y ? y / 2 : this.height / 2,
                    m = this.width > g ? g / 2 : this.width / 2,
                    x = l && p > this.index && p <= c,
                    b = l && p < this.index && c <= p,
                    w = {x: 0, y: 0},
                    S = i[d].edgeOffset;
                  S ||
                    ((S = F(h, this.container)),
                    (i[d].edgeOffset = S),
                    l && (i[d].boundingClientRect = H(h, o)));
                  var O = d < i.length - 1 && i[d + 1],
                    T = 0 < d && i[d - 1];
                  O &&
                    !O.edgeOffset &&
                    ((O.edgeOffset = F(O.node, this.container)),
                    l && (O.boundingClientRect = H(O.node, o))),
                    p !== this.index
                      ? (this.axis.x
                          ? this.axis.y
                            ? b ||
                              (p < this.index &&
                                ((a + r.left - m <= S.left &&
                                  s + r.top <= S.top + v) ||
                                  s + r.top + v <= S.top))
                              ? ((w.x = this.width + this.marginOffset.x),
                                S.left + w.x >
                                  this.containerBoundingRect.width - m &&
                                  O &&
                                  ((w.x = O.edgeOffset.left - S.left),
                                  (w.y = O.edgeOffset.top - S.top)),
                                null === this.newIndex && (this.newIndex = p))
                              : (x ||
                                  (p > this.index &&
                                    ((a + r.left + m >= S.left &&
                                      s + r.top + v >= S.top) ||
                                      s + r.top + v >= S.top + y))) &&
                                ((w.x = -(this.width + this.marginOffset.x)),
                                S.left + w.x <
                                  this.containerBoundingRect.left + m &&
                                  T &&
                                  ((w.x = T.edgeOffset.left - S.left),
                                  (w.y = T.edgeOffset.top - S.top)),
                                (this.newIndex = p))
                            : x || (p > this.index && a + r.left + m >= S.left)
                            ? ((w.x = -(this.width + this.marginOffset.x)),
                              (this.newIndex = p))
                            : (b ||
                                (p < this.index && a + r.left <= S.left + m)) &&
                              ((w.x = this.width + this.marginOffset.x),
                              null == this.newIndex && (this.newIndex = p))
                          : this.axis.y &&
                            (x || (p > this.index && s + r.top + v >= S.top)
                              ? ((w.y = -(this.height + this.marginOffset.y)),
                                (this.newIndex = p))
                              : (b ||
                                  (p < this.index && s + r.top <= S.top + v)) &&
                                ((w.y = this.height + this.marginOffset.y),
                                null == this.newIndex && (this.newIndex = p))),
                        (u[d] = W(w)))
                      : t &&
                        N((this.sortableGhost = h), {
                          opacity: 0,
                          visibility: 'hidden',
                        });
                }
                for (var C = 0, k = i.length; C < k; C++) {
                  var I = this.props.transitionDuration;
                  I && (u[C] = R({}, u[C], L(I))), N(i[C].node, u[C]);
                }
                null == this.newIndex && (this.newIndex = this.index),
                  l && (this.newIndex = c);
                var E = l ? this.prevIndex : c;
                n &&
                  this.newIndex !== E &&
                  n({
                    collection: this.manager.active.collection,
                    index: this.index,
                    newIndex: this.newIndex,
                    oldIndex: E,
                    isKeySorting: l,
                    nodes: i,
                    helper: this.helper,
                  });
              },
            },
            {
              key: 'getWrappedInstance',
              value: function() {
                return (
                  w(
                    o.withRef,
                    'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableContainer() call',
                  ),
                  this.refs.wrappedInstance
                );
              },
            },
            {
              key: 'getContainer',
              value: function() {
                var e = this.props.getContainer;
                return 'function' != typeof e
                  ? a.findDOMNode(this)
                  : e(o.withRef ? this.getWrappedInstance() : void 0);
              },
            },
            {
              key: 'render',
              value: function() {
                var e = o.withRef ? 'wrappedInstance' : null;
                return r.createElement(t, s({ref: e}, k(this.props, ne)));
              },
            },
            {
              key: 'helperContainer',
              get: function() {
                var e = this.props.helperContainer;
                return 'function' == typeof e
                  ? e()
                  : this.props.helperContainer || this.document.body;
              },
            },
            {
              key: 'containerScrollDelta',
              get: function() {
                return this.props.useWindowAsScrollContainer
                  ? {left: 0, top: 0}
                  : {
                      left:
                        this.scrollContainer.scrollLeft -
                        this.initialScroll.left,
                      top:
                        this.scrollContainer.scrollTop - this.initialScroll.top,
                    };
              },
            },
            {
              key: 'windowScrollDelta',
              get: function() {
                return {
                  left:
                    this.contentWindow.pageXOffset -
                    this.initialWindowScroll.left,
                  top:
                    this.contentWindow.pageYOffset -
                    this.initialWindowScroll.top,
                };
              },
            },
          ]),
          n
        );
      })(r.Component)),
      c(e, 'displayName', j('sortableList', t)),
      c(e, 'defaultProps', te),
      c(e, 'propTypes', Z),
      c(e, 'childContextTypes', {manager: i.object.isRequired}),
      n
    );
  }
  var re = {
      index: i.number.isRequired,
      collection: i.oneOfType([i.number, i.string]),
      disabled: i.bool,
    },
    ie = Object.keys(re);
  function ae(n) {
    var e,
      t,
      o =
        1 < arguments.length && void 0 !== arguments[1]
          ? arguments[1]
          : {withRef: !1};
    return (
      (t = e = (function(e) {
        function t() {
          return u(this, t), g(this, y(t).apply(this, arguments));
        }
        return (
          m(t, e),
          f(t, [
            {
              key: 'componentDidMount',
              value: function() {
                this.register();
              },
            },
            {
              key: 'componentDidUpdate',
              value: function(e) {
                this.node &&
                  (e.index !== this.props.index &&
                    (this.node.sortableInfo.index = this.props.index),
                  e.disabled !== this.props.disabled &&
                    (this.node.sortableInfo.disabled = this.props.disabled)),
                  e.collection !== this.props.collection &&
                    (this.unregister(e.collection), this.register());
              },
            },
            {
              key: 'componentWillUnmount',
              value: function() {
                this.unregister();
              },
            },
            {
              key: 'register',
              value: function() {
                var e = this.props,
                  t = e.collection,
                  n = e.disabled,
                  o = e.index,
                  r = a.findDOMNode(this);
                (r.sortableInfo = {
                  collection: t,
                  disabled: n,
                  index: o,
                  manager: this.context.manager,
                }),
                  (this.node = r),
                  (this.ref = {node: r}),
                  this.context.manager.add(t, this.ref);
              },
            },
            {
              key: 'unregister',
              value: function() {
                var e =
                  0 < arguments.length && void 0 !== arguments[0]
                    ? arguments[0]
                    : this.props.collection;
                this.context.manager.remove(e, this.ref);
              },
            },
            {
              key: 'getWrappedInstance',
              value: function() {
                return (
                  w(
                    o.withRef,
                    'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableElement() call',
                  ),
                  this.refs.wrappedInstance
                );
              },
            },
            {
              key: 'render',
              value: function() {
                var e = o.withRef ? 'wrappedInstance' : null;
                return r.createElement(n, s({ref: e}, k(this.props, ie)));
              },
            },
          ]),
          t
        );
      })(r.Component)),
      c(e, 'displayName', j('sortableElement', n)),
      c(e, 'contextTypes', {manager: i.object.isRequired}),
      c(e, 'propTypes', re),
      c(e, 'defaultProps', {collection: 0}),
      t
    );
  }
  (e.SortableContainer = oe),
    (e.sortableContainer = oe),
    (e.SortableElement = ae),
    (e.sortableElement = ae),
    (e.SortableHandle = $),
    (e.sortableHandle = $),
    (e.arrayMove = function(e, t, n) {
      return (
        (e = e.slice()).splice(n < 0 ? e.length + n : n, 0, e.splice(t, 1)[0]),
        e
      );
    }),
    Object.defineProperty(e, '__esModule', {value: !0});
});
